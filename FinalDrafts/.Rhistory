}
fixation
fixation <- data.frame("Duration.of.Fixation")
for( i in realLenth){
#emptyData <- mavez
fixation <- rbind(fixation,mavez$Duration.of.Fixation[i] - mavez$Duration.of.Fixation[i+1])
#  fixation <- mavez$Duration.of.Fixation[i] - mavez$Duration.of.Fixation[i+1]
#   emptyData$Horizontal.Dispersion[i] <- mavez$Horizontal.Dispersion[i] - mavez$Horizontal.Dispersion[i+1]
#   emptyData$Vertical.Dispersion[i] <- mavez$Vertical.Dispersion[i] - mavez$Vertical.Dispersion[i+1]
#   emptyData$Velocity.Horizontal[i] <- mavez$Velocity.Horizontal[i] - mavez$Velocity.Horizontal[i+1]
#   emptyData$Velocity.Vertical[i] <- mavez$Velocity.Vertical[i] - mavez$Velocity.Vertical[i+1]
}
View(fixation)
fixation <- c()
fixation
append(fixation,1)
f
fixation
?append()
fixation.append(fixation,1)
append(fixation,1)
append(fixation,c(1,2,3))
fixation
fixation <- c()
fixation
fixation <- c(fixation,c(1,2,3))
fixation
fixation <- c(fixation,c(4))
fixation
fixation <- c()
for( i in realLenth){
#emptyData <- mavez
fixation <- c(fixation,c(mavez$Duration.of.Fixation[i] - mavez$Duration.of.Fixation[i+1]))
#  fixation <- mavez$Duration.of.Fixation[i] - mavez$Duration.of.Fixation[i+1]
#   emptyData$Horizontal.Dispersion[i] <- mavez$Horizontal.Dispersion[i] - mavez$Horizontal.Dispersion[i+1]
#   emptyData$Vertical.Dispersion[i] <- mavez$Vertical.Dispersion[i] - mavez$Vertical.Dispersion[i+1]
#   emptyData$Velocity.Horizontal[i] <- mavez$Velocity.Horizontal[i] - mavez$Velocity.Horizontal[i+1]
#   emptyData$Velocity.Vertical[i] <- mavez$Velocity.Vertical[i] - mavez$Velocity.Vertical[i+1]
}
fixation
Duration.of.Fixation <- c()
Horizontal.Dispersion <- c()
Vertical.Dispersion <- c()
Velocity.Horizontal <- c()
Velocity.Vertical <- c()
rm(fixation)
Duration.of.Fixation <- c()
Horizontal.Dispersion <- c()
Vertical.Dispersion <- c()
Velocity.Horizontal <- c()
Velocity.Vertical <- c()
for( i in realLenth){
Duration.of.Fixation <- c(Duration.of.Fixation,c(mavez$Duration.of.Fixation[i] - mavez$Duration.of.Fixation[i+1]))
Horizontal.Dispersion <- c(Horizontal.Dispersion,c(mavez$Horizontal.Dispersion[i] - mavez$Horizontal.Dispersion[i+1]))
Vertical.Dispersion <- c(Vertical.Dispersion,c(mavez$Vertical.Dispersion[i] - mavez$Vertical.Dispersion[i+1]))
Velocity.Horizontal <- c(Velocity.Horizontal,c(mavez$Velocity.Horizontal[i] - mavez$Velocity.Horizontal[i+1]))
Velocity.Vertical <- c(Velocity.Vertical,c(mavez$Velocity.Vertical[i] - mavez$Velocity.Vertical[i+1]))
}
Duration.of.Fixation
Horizontal.Dispersion
Velocity.Vertical
Vertical.Dispersion
Velocity.Horizontal
Duration.of.Fixation
Horizontal.Dispersion
Vertical.Dispersion
Velocity.Horizontal
Velocity.Vertical
newData <- data.frame("Condition"= mavez$Condition[realLenth])
newData$Duration.of.Fixation
newData <- data.frame("Condition"= mavez$Condition[realLenth])
newData$Duration.of.Fixation <- Duration.of.Fixation
newData$Horizontal.Dispersion <- Horizontal.Dispersion
newData$Vertical.Dispersion <- Vertical.Dispersion
newData$Velocity.Horizontal <- Velocity.Horizontal
newData$Velocity.Vertical <- Velocity.Vertical
newData
View(eyeMovements)
head(eyeMovements_2)
eyeMovements_2Length <- nrow(eyeMovements_2)
eyeMovements_2Length
realLenth <-seq(1,eyeMovements_2Length,by = 2)
realLenth
Duration.of.Fixation <- c()
Horizontal.Dispersion <- c()
Vertical.Dispersion <- c()
Velocity.Horizontal <- c()
Velocity.Vertical <- c()
realLenth
eyeMovements_3 <- data.frame("Condition"= eyeMovements_2$Condition[realLenth])
eyeMovements_3
for( i in realLenth){
Duration.of.Fixation <- c(Duration.of.Fixation,c(mavez$Duration.of.Fixation[i] - mavez$Duration.of.Fixation[i+1]))
Horizontal.Dispersion <- c(Horizontal.Dispersion,c(mavez$Horizontal.Dispersion[i] - mavez$Horizontal.Dispersion[i+1]))
Vertical.Dispersion <- c(Vertical.Dispersion,c(mavez$Vertical.Dispersion[i] - mavez$Vertical.Dispersion[i+1]))
Velocity.Horizontal <- c(Velocity.Horizontal,c(mavez$Velocity.Horizontal[i] - mavez$Velocity.Horizontal[i+1]))
Velocity.Vertical <- c(Velocity.Vertical,c(mavez$Velocity.Vertical[i] - mavez$Velocity.Vertical[i+1]))
}
newData$Duration.of.Fixation <- Duration.of.Fixation
newData$Horizontal.Dispersion <- Horizontal.Dispersion
newData$Vertical.Dispersion <- Vertical.Dispersion
newData$Velocity.Horizontal <- Velocity.Horizontal
eyeMovements_2Length <- nrow(eyeMovements_2)
eyeMovements_2Length
realLenth <-seq(1,eyeMovements_2Length,by = 2)
realLenth
Duration.of.Fixation <- c()
Horizontal.Dispersion <- c()
Vertical.Dispersion <- c()
Velocity.Horizontal <- c()
Velocity.Vertical <- c()
eyeMovements_3 <- data.frame("Condition"= eyeMovements_2$Condition[realLenth])
eyeMovements_3
for( i in realLenth){
Duration.of.Fixation <- c(Duration.of.Fixation,c(mavez$Duration.of.Fixation[i] - mavez$Duration.of.Fixation[i+1]))
Horizontal.Dispersion <- c(Horizontal.Dispersion,c(mavez$Horizontal.Dispersion[i] - mavez$Horizontal.Dispersion[i+1]))
Vertical.Dispersion <- c(Vertical.Dispersion,c(mavez$Vertical.Dispersion[i] - mavez$Vertical.Dispersion[i+1]))
Velocity.Horizontal <- c(Velocity.Horizontal,c(mavez$Velocity.Horizontal[i] - mavez$Velocity.Horizontal[i+1]))
Velocity.Vertical <- c(Velocity.Vertical,c(mavez$Velocity.Vertical[i] - mavez$Velocity.Vertical[i+1]))
}
eyeMovements_3$Duration.of.Fixation <- Duration.of.Fixation
eyeMovements_3$Horizontal.Dispersion <- Horizontal.Dispersion
eyeMovements_3$Vertical.Dispersion <- Vertical.Dispersion
eyeMovements_3$Velocity.Horizontal <- Velocity.Horizontal
eyeMovements_3$Velocity.Vertical <- Velocity.Vertical
eyeMovements_3
eyeMovements_2Length <- nrow(eyeMovements_2)
eyeMovements_2Length <- nrow(eyeMovements_2)
eyeMovements_2Length
realLenth <-seq(1,eyeMovements_2Length,by = 2)
realLenth
Duration.of.Fixation <- c()
Horizontal.Dispersion <- c()
Vertical.Dispersion <- c()
Velocity.Horizontal <- c()
Velocity.Vertical <- c()
eyeMovements_3 <- data.frame("Condition"= eyeMovements_2$Condition[realLenth])
eyeMovements_3
for( i in realLenth){
Duration.of.Fixation <- c(Duration.of.Fixation,c(mavez$Duration.of.Fixation[i] - mavez$Duration.of.Fixation[i+1]))
Horizontal.Dispersion <- c(Horizontal.Dispersion,c(mavez$Horizontal.Dispersion[i] - mavez$Horizontal.Dispersion[i+1]))
Vertical.Dispersion <- c(Vertical.Dispersion,c(mavez$Vertical.Dispersion[i] - mavez$Vertical.Dispersion[i+1]))
Velocity.Horizontal <- c(Velocity.Horizontal,c(mavez$Velocity.Horizontal[i] - mavez$Velocity.Horizontal[i+1]))
Velocity.Vertical <- c(Velocity.Vertical,c(mavez$Velocity.Vertical[i] - mavez$Velocity.Vertical[i+1]))
}
Duration.of.Fixation
eyeMovements_2Length <- nrow(eyeMovements_2)
eyeMovements_2Length
realLenth <-seq(1,eyeMovements_2Length,by = 2)
realLenth
#fixation <- data.frame("Duration.of.Fixation")
#fixation <- c(fixation,c(1,2,3))
Duration.of.Fixation <- c()
Horizontal.Dispersion <- c()
Vertical.Dispersion <- c()
Velocity.Horizontal <- c()
Velocity.Vertical <- c()
eyeMovements_3 <- data.frame("Condition"= eyeMovements_2$Condition[realLenth])
eyeMovements_3
for( i in realLenth){
Duration.of.Fixation <- c(Duration.of.Fixation,c(eyeMovements_2$Duration.of.Fixation[i] - eyeMovements_2$Duration.of.Fixation[i+1]))
Horizontal.Dispersion <- c(Horizontal.Dispersion,c(eyeMovements_2$Horizontal.Dispersion[i] - eyeMovements_2$Horizontal.Dispersion[i+1]))
Vertical.Dispersion <- c(Vertical.Dispersion,c(eyeMovements_2$Vertical.Dispersion[i] - eyeMovements_2$Vertical.Dispersion[i+1]))
Velocity.Horizontal <- c(Velocity.Horizontal,c(eyeMovements_2$Velocity.Horizontal[i] - eyeMovements_2$Velocity.Horizontal[i+1]))
Velocity.Vertical <- c(Velocity.Vertical,c(eyeMovements_2$Velocity.Vertical[i] - eyeMovements_2$Velocity.Vertical[i+1]))
}
eyeMovements_3$Duration.of.Fixation <- Duration.of.Fixation
eyeMovements_3$Horizontal.Dispersion <- Horizontal.Dispersion
eyeMovements_3$Vertical.Dispersion <- Vertical.Dispersion
eyeMovements_3$Velocity.Horizontal <- Velocity.Horizontal
eyeMovements_3$Velocity.Vertical <- Velocity.Vertical
eyeMovements_3
eyeMovements_2$Duration.of.Fixation[152] - eyeMovements_2$Duration.of.Fixation[153]
eyeMovements_3[152,]
eyeMovements_2[152,]
eyeMovements_2$Duration.of.Fixation[151] - eyeMovements_2$Duration.of.Fixation[152]
eyeMovements_2$Duration.of.Fixation[151]
eyeMovements_2$Duration.of.Fixation[152]
eyeMovements_2$Duration.of.Fixation[151] - eyeMovements_2$Duration.of.Fixation[152]
eyeMovements_3[152,]
eyeMovements_3[151,]
eyeMovements_2$Duration.of.Fixation[151] - eyeMovements_2$Duration.of.Fixation[152]
filter(eyeMovements_3, Duration.of.Fixation == 23.74767)
realLenth
eyeMovements_2$Duration.of.Fixation[611] - eyeMovements_2$Duration.of.Fixation[612]
eyeMovements_2$Duration.of.Fixation[611] - eyeMovements_2$Duration.of.Fixation[612]
eyeMovements_3[306,]
head(eyeMovements_3)
head(eyeMovements_3)
write.csv(eyeMovements_3,file = "eyeMovement_3.csv",row.names = FALSE)
eyeMovements_3.GLM <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = eyeMovements_3,family = binomial())
head(eyeMovements_3.GLM$coefficients)
head(eyeMovements_3.GLM$residuals)
head(eyeMovements_3.GLM$fitted.values)
head(eyeMovements_3.GLM$effects)
summary(eyeMovements_3.GLM)
plot(eyeMovements_3.GLM)
plot(eyeMovements_3.GLM)
head(eyeMovements_3$Condition)
eyeMovements_3$Condition
eyeMovements_3[214,]
eyeMovements_4 <- eyeMovements_3[-(214),]
eyeMovements_4.GLM <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = eyeMovements_4,family = binomial())
eyeMovements_4.GLM$coefficients
eyeMovements_3.GLM$coefficients
plot(eyeMovements_3.GLM)
summary(eyeMovements_4.GLM)
eyeMovements_4.GLM$aic
eyeMovements_3.GLM$aic
summary(eyeMovements_4.GLM)
plot(eyeMovements_4.GLM)
eyeMovements_4 <- eyeMovements_3[-(214,79),]
eyeMovements_4 <- eyeMovements_3[-(214:79),]
eyeMovements_4 <- eyeMovements_3[-(79,214),]
eyeMovements_4 <- eyeMovements_3[-c(79,214),]
eyeMovements_4 <- eyeMovements_3[-c(79,214),]
eyeMovements_4.GLM <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = eyeMovements_4,family = binomial())
eyeMovements_4.GLM$coefficients
eyeMovements_3.GLM$coefficients
eyeMovements_4.GLM$aic
plot(eyeMovements_4.GLM)
splitdata <- function(dataframe, seed=NULL) {
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
wholeData4 <- splitdata(eyeMovements_4,123)
eyeTraining4 <- wholeData4$trainset
eyeTest4 <- wholeData4$testset
write.csv(eyeTraining4,file = "TrainingEye_4.csv",row.names = FALSE)
write.csv(eyeTest4,file = "TestEye_4.csv",row.names = FALSE)
training.GLM <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = eyeTraining4,family = binomial())
training.GLM$coefficients
training.GLM$residuals
training.GLM$fitted.values
training.GLM$effects
summary(training.GLM)
eyeMovements_4.GLM$aic
plot(training.GLM)
predict_training_glm <- round(predict(training.GLM,eyeTest4,type = "response"))
str(predict_training_glm)
predict_training_glm_continous <- predict(training_glm,eyeTestScale,type = "response")
predict_training_glm_continous
predict_training_glm_continous <- predict(training_glm,eyeTest4,type = "response")
predict_training_glm_continous <- predict(training.GLM,eyeTest4,type = "response")
predict_training_glm_continous
confusion.matrix(eyeTest4$Condition,predict_training_glm,threshold = .95)
install.packages("caret")
library(caret)
confusion.matrix(eyeTest4$Condition,predict_training_glm,threshold = .95)
confusionMatrix(eyeTest4$Condition,predict_training_glm,threshold = .95)
library(ROCR)
library(bestglm)
library(gdata)
confusion.matrix(eyeTest4$Condition,predict_training_glm,threshold = .95)
library(gdata)
install.packages("SDMTools")
library(SDMTools)
library(ROCR)
library(bestglm)
install.packages("lars")
library(lars)
confusion.matrix(eyeTest4$Condition,predict_training_glm,threshold = .95)
pred_training <- prediction(predict_training_glm_continous,eyeTest4$Condition)
pred_training
performance_training <- performance(pred_training,"tpr","fpr")
performance_training
x <- unlist(performance_training@x.values)
y <- unlist(performance_training@y.values)
plot(performance_training)
lines(x,y)
confusion.matrix(eyeTest4$Condition,predict_training_glm,threshold = .95)
source("LSA.R.txt")
lsa(eyeTraining4)
lsa(eyeTraining4)
lsa(eyeMovements_4.GLM)
head(eyeTraining4)
summary(training.GLM)
lsa(eyeMovements_4.GLM)
lsa(training.GLM)
summary(training.GLM)
lsa(training.GLM)
training.GLM$coefficients
source("LSA.R.txt")
lsa(training.GLM)
aicFrame <- data.frame("AIC VALUE")
aicFrame
aicFrame <- data.frame()
aicFrame
for(i in 200:1000){
splitdataWORK <- function(dataframe, seed=NULL){
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
push1 <- splitdataWORK(eyeMovements_4,i)
pushTraining <- wholeData4$trainset
pushTest <- wholeData4$testset
pushTraining.glm <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = pushTraining,family = binomial())
aicFrame <-c(aicFrame,c(pushTraining.glm$aic)
}
aicFrame <- c(aicFrame,c(1,2))
aicFrame
aicFrame <- c(aicFrame,c(1))
aicFrame
eyeMovements_2$Condition[realLenth]
length(eyeMovements_2$Condition[realLenth])
aicFrame <- data.frame(c())
aicFrame
aicFrame <- c(aicFrame,c(1))
aicFrame
aicFrame <- data.frame(c())
aicFrame <- c(1)
aicFrame <- c(2)
aicFrame
aicFrame <- data.frame("AIC" = 1000)
aicFrame
aicFrame <- data.frame()
aicFrame <- data.frame()
aicFrame
for(i in 200:1000){
splitdataWORK <- function(dataframe, seed=NULL){
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
push1 <- splitdataWORK(eyeMovements_4,i)
pushTraining <- wholeData4$trainset
pushTest <- wholeData4$testset
pushTraining.glm <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = pushTraining,family = binomial())
aicFrame <- c(aicFrame,c(pushTraining.glm$aic)
}
aicFrame <- data.frame()
aicFrame
for(i in 200:1000){
splitdataWORK <- function(dataframe, seed=NULL){
index <- 1:nrow(dataframe)
if (!is.null(seed)) set.seed(seed)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
push1 <- splitdataWORK(eyeMovements_4,i)
pushTraining <- wholeData4$trainset
pushTest <- wholeData4$testset
pushTraining.glm <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = pushTraining,family = binomial())
pushTraining.glm$aic
}
View(pushTest)
summary(pushTraining.glm)
for(i in 200:1000){
splitdataWORK <- function(dataframe, seed=NULL){
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
push1 <- splitdataWORK(eyeMovements_4,i)
pushTraining <- push1$trainset
pushTest <- push1$testset
pushTraining.glm <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = pushTraining,family = binomial())
pushTraining.glm$aic
}
summary(pushTraining.glm)
for(i in 200:1000){
splitdataWORK <- function(dataframe, seed=NULL){
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
push1 <- splitdataWORK(eyeMovements_4,i)
pushTraining <- push1$trainset
pushTest <- push1$testset
pushTraining.glm <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = pushTraining,family = binomial())
return(pushTraining.glm$aic)
}
for(i in 200:1000){
splitdataWORK <- function(dataframe, seed=NULL){
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
push1 <- splitdataWORK(eyeMovements_4,i)
pushTraining <- push1$trainset
pushTest <- push1$testset
pushTraining.glm <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = pushTraining,family = binomial())
return(pushTraining.glm$aic)
}
for(i in 200:1000){
splitdataWORK <- function(dataframe, seed=NULL){
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
push1 <- splitdataWORK(eyeMovements_4,i)
pushTraining <- push1$trainset
pushTest <- push1$testset
pushTraining.glm <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = pushTraining,family = binomial())
print(pushTraining.glm$aic)
}
aicFrame <- c()
for(i in 200:1000){
splitdataWORK <- function(dataframe, seed=NULL){
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
push1 <- splitdataWORK(eyeMovements_4,i)
pushTraining <- push1$trainset
pushTest <- push1$testset
pushTraining.glm <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = pushTraining,family = binomial())
aicFrame <- print(pushTraining.glm$aic)
}
aicFrame
aicFrame <- c()
aicFrame
for(i in 200:1000){
splitdataWORK <- function(dataframe, seed=NULL){
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)*.80))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
push1 <- splitdataWORK(eyeMovements_4,i)
pushTraining <- push1$trainset
pushTest <- push1$testset
pushTraining.glm <- glm(Condition ~ Duration.of.Fixation +
Horizontal.Dispersion +
Vertical.Dispersion +
Velocity.Horizontal +
Velocity.Vertical,data = pushTraining,family = binomial())
aicFrame <- rbind(aicFrame,pushTraining.glm$aic)
}
aic
aicFrame
cMatrix <- confusion.matrix(eyeTest4$Condition,predict_training_glm,threshold = .95)
cMatrix
plot(aicFrame)
